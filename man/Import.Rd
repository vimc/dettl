% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generic_import.R
\name{Import}
\alias{Import}
\title{Generic import object.}
\description{
Generic import object.

Generic import object.
}
\details{
This shouldn't be initialised directly - this object manages transactions
and the db connection and should be extended to implement actual imports.
}
\keyword{internal}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{path}}{Path to directory containing import object}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Import-get_connection}{\code{Import$get_connection()}}
\item \href{#method-Import-begin_transaction}{\code{Import$begin_transaction()}}
\item \href{#method-Import-rollback_transaction}{\code{Import$rollback_transaction()}}
\item \href{#method-Import-commit_transaction}{\code{Import$commit_transaction()}}
\item \href{#method-Import-get_log_table}{\code{Import$get_log_table()}}
\item \href{#method-Import-new}{\code{Import$new()}}
\item \href{#method-Import-reload}{\code{Import$reload()}}
\item \href{#method-Import-read_config}{\code{Import$read_config()}}
\item \href{#method-Import-extract}{\code{Import$extract()}}
\item \href{#method-Import-transform}{\code{Import$transform()}}
\item \href{#method-Import-pre_modify_checks}{\code{Import$pre_modify_checks()}}
\item \href{#method-Import-load}{\code{Import$load()}}
\item \href{#method-Import-run_import}{\code{Import$run_import()}}
\item \href{#method-Import-format}{\code{Import$format()}}
\item \href{#method-Import-help}{\code{Import$help()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-get_connection"></a>}}
\if{latex}{\out{\hypertarget{method-Import-get_connection}{}}}
\subsection{Method \code{get_connection()}}{
Tidy up open connections, rolling back any active transactions


Get the database connection being used by the import. Used for testing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$get_connection()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The DBI connection
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-begin_transaction"></a>}}
\if{latex}{\out{\hypertarget{method-Import-begin_transaction}{}}}
\subsection{Method \code{begin_transaction()}}{
Start a transaction
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$begin_transaction()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-rollback_transaction"></a>}}
\if{latex}{\out{\hypertarget{method-Import-rollback_transaction}{}}}
\subsection{Method \code{rollback_transaction()}}{
Rollback a transaction
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$rollback_transaction()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-commit_transaction"></a>}}
\if{latex}{\out{\hypertarget{method-Import-commit_transaction}{}}}
\subsection{Method \code{commit_transaction()}}{
Commit a transaction
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$commit_transaction()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-get_log_table"></a>}}
\if{latex}{\out{\hypertarget{method-Import-get_log_table}{}}}
\subsection{Method \code{get_log_table()}}{
Get the name of the log table for a particular import. This is the name
of the log table configured in the dettl config
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$get_log_table()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Log table name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-new"></a>}}
\if{latex}{\out{\hypertarget{method-Import-new}{}}}
\subsection{Method \code{new()}}{
Create Import object - shouldn't be called directly. Use
\code{\link{dettl}} to create the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$new(path, db_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{Path to directory containing import object}

\item{\code{db_name}}{Database from dettl config to create import object for}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `Import` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-reload"></a>}}
\if{latex}{\out{\hypertarget{method-Import-reload}{}}}
\subsection{Method \code{reload()}}{
Reload the objects sources to refresh source code or repair a broken
Postgres connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$reload()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-read_config"></a>}}
\if{latex}{\out{\hypertarget{method-Import-read_config}{}}}
\subsection{Method \code{read_config()}}{
Abstract impl should be overridden by subclass
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$read_config()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-extract"></a>}}
\if{latex}{\out{\hypertarget{method-Import-extract}{}}}
\subsection{Method \code{extract()}}{
Run the extract stage of the data import - does nothing for generic
override in subclass if required.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$extract()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-transform"></a>}}
\if{latex}{\out{\hypertarget{method-Import-transform}{}}}
\subsection{Method \code{transform()}}{
Run the extract stage of the data import - does nothing for generic
override in subclass if required.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$transform()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-pre_modify_checks"></a>}}
\if{latex}{\out{\hypertarget{method-Import-pre_modify_checks}{}}}
\subsection{Method \code{pre_modify_checks()}}{
Run checks that db can be modified, this checks that:
* If require_branch set in cfg that import is for that branch
* If confirm TRUE asks users to confirm action will modify db
* If git is dirty, checks that user has explicitly said that is okay
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$pre_modify_checks(dry_run, allow_dirty_git)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dry_run}}{Whether to run in dry run mode. If TRUE then any database
changes will be rolled back. Defaults to FALSE.}

\item{\code{allow_dirty_git}}{If TRUE then skips check that the import is up to
date with remote git repo. FALSE by default.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-load"></a>}}
\if{latex}{\out{\hypertarget{method-Import-load}{}}}
\subsection{Method \code{load()}}{
Run the import step ensuring tests pass before db changes are committed.

Runs the import on the DB within a transaction. Then run a set of
tests on the DB and rollback the changes if any should fail.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$load(comment = NULL, dry_run = FALSE, allow_dirty_git = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{comment}}{An optional comment to add to the import log table for this
run.}

\item{\code{dry_run}}{Whether to run in dry run mode. If TRUE then any database
changes will be rolled back. Defaults to FALSE.}

\item{\code{allow_dirty_git}}{If TRUE then skips check that the import is up to
date with remote git repo. FALSE by default.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-run_import"></a>}}
\if{latex}{\out{\hypertarget{method-Import-run_import}{}}}
\subsection{Method \code{run_import()}}{
For generic import this is just running the load step,
expect this gets overridden in subclasses.
.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$run_import(
  comment = NULL,
  dry_run = FALSE,
  allow_dirty_git = FALSE,
  stage = c("extract", "transorm")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{comment}}{An optional comment to add to the import log table for this
run.}

\item{\code{dry_run}}{Whether to run in dry run mode. If TRUE then any database
changes will be rolled back. Defaults to FALSE.}

\item{\code{allow_dirty_git}}{If TRUE then skips check that the import is up to
date with remote git repo. FALSE by default.}

\item{\code{stage}}{The stage or stages of the import to be run.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-format"></a>}}
\if{latex}{\out{\hypertarget{method-Import-format}{}}}
\subsection{Method \code{format()}}{
Custom formatter for pretty printing object summary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$format(brief = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{brief}}{If TRUE then print a brief summary.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Import-help"></a>}}
\if{latex}{\out{\hypertarget{method-Import-help}{}}}
\subsection{Method \code{help()}}{
Print help page for the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Import$help()}\if{html}{\out{</div>}}
}

}
}
