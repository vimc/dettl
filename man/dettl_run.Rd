% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dettl_runner.R
\name{dettl_run}
\alias{dettl_run}
\title{Run specified stages of an import}
\usage{
dettl_run(
  import,
  db_name = NULL,
  comment = NULL,
  dry_run = FALSE,
  allow_dirty_git = FALSE,
  stage = c("extract", "transform"),
  save = FALSE
)
}
\arguments{
\item{import}{Path to import directory.}

\item{db_name}{The name of the db to connect to. Connection info must be
configured via the `dettl_config.yml`. If name is left blank this will default
to using the first db configured.}

\item{comment}{Optional comment to be written to db log table when import is
run.}

\item{dry_run}{If TRUE then any changes to the database will be rolled back.}

\item{allow_dirty_git}{If TRUE then skips check that the import is up to date
with remote git repo.}

\item{stage}{The stage or stages of the import to be run.}

\item{save}{Path and name to save data from each stage at, if TRUE then will
save to a tempfile.}
}
\value{
The import object
}
\description{
Run specified stages of an import
}
\examples{
path <- dettl:::prepare_test_import(
  system.file("examples", "person_information", package = "dettl"),
  system.file("examples", "dettl_config.yml", package = "dettl")
)
dettl::dettl_run(file.path(path, "person_information/"), "test",
  comment = "Example import")
dettl::dettl_run(file.path(path, "person_information/"), "test",
  comment = "Example import",
  save = tempfile())
import <- dettl::dettl_run(file.path(path, "person_information/"),
  "test", stage = "extract")
dettl::dettl_run(file.path(path, "person_information/"), "test",
  stage = c("extract", "transform", "load"),
  comment = "Example import")
}
